---
- hosts: master
  gather_facts: no
  user: root
  vars:
    one_month: 2592000 # 60*60*24*30 - 1 month
    services:
      grafana:
        local_port: 3000
        remote_port: 3000
        namespace: kube-system
        label: k8s-app=grafana
        enabled: true
      influxdb:
        local_port: 8086
        remote_port: 8086
        namespace: kube-system
        label: k8s-app=influxdb
        enabled: true
      kafka:
        local_port: 9092
        remote_port: 9092
        namespace: default
        label: role=kafka
        enabled: true
      cassandra:
        local_port: 9042
        remote_port: 9042
        namespace: default
        label: role=cassandra
        enabled: false
      zookeeper:
        local_port: 2888
        remote_port: 2888
        namespace: default
        label: role=zookeeper
        enabled: false
      spark-ui-proxy:
        local_port: 8080
        remote_port: 80
        namespace: default
        label: role=spark-ui-proxy
        enabled: true
      k8s-dashboard:
        local_port: 8443
        remote_port: 8443
        namespace: kube-system
        label: k8s-app=kubernetes-dashboard
    
  tasks:

    - name: "stop kubernetes port-forwarding     "
      command: "pkill -9 -f kubectl.+port-forward"
      ignore_errors: true
      tags:
        - stop

    - name: "find grafana pod name                "
      command:
        kubectl get pods -n kube-system -l k8s-app=grafana
        -o jsonpath='{.items[0].metadata.name}'
      register: grafana
      tags:
        - grafana
        - start

    - name: "start grafana port-forwarding        "
      command:
        "kubectl port-forward {{grafana.stdout}} 3000:3000 -n kube-system"
      async: "{{one_month}}"
      poll: 0
      tags:
        - grafana
        - start

    - name: "find influxdb pod name               "
      command:
        kubectl get pods -n kube-system -l k8s-app=influxdb
        -o jsonpath='{.items[0].metadata.name}'
      register: influxdb
      tags:
        - influxdb
        - start

    - name: "start influxdb port-forwarding       "
      command:
        "kubectl port-forward {{influxdb.stdout}} 8086:8086 -n kube-system"
      async: "{{one_month}}"
      poll: 0
      tags:
        - influxdb
        - start

    - name: "find kafka pod name                  "
      command:
        kubectl get pods -n default -l role=kafka
        -o jsonpath='{.items[0].metadata.name}'
      register: kafka
      tags:
        - kafka
        - start

    - name: "start kafka port-forwarding          "
      command:
        "kubectl port-forward {{kafka.stdout}} 9092:9092 -n default"
      async: "{{one_month}}"
      poll: 0
      tags:
        - kafka
        - start

        
    - name: "find spark-ui-proxy pod name         "
      command:
        kubectl get pods -n default -l role=spark-ui-proxy
        -o jsonpath='{.items[0].metadata.name}'
      register: sparkproxy
      tags:
        - spark-ui-proxy
        - start
        
    - name: "start spark-ui-proxy port-forwarding "
      command:
        "kubectl port-forward {{sparkproxy.stdout}} 8080:80 -n default"
      async: "{{one_month}}"
      poll: 0
      tags:
        - spark-ui-proxy
        - start

    - name: "find k8s-dashboard pod name          "
      command:
        kubectl get pods -n kube-system -l k8s-app=kubernetes-dashboard
        -o jsonpath='{.items[0].metadata.name}'
      register: k8sdashboard
      tags:
        - k8s-dashboard
        - start

        
    - name: "start k8s-dashboard port-forwarding  "
      command:
        "kubectl port-forward {{k8sdashboard.stdout}} 8080:80 -n kube-system"
      async: "{{one_month}}"
      poll: 0
      tags:
        - k8s-dashboard
        - start
        

    - name: "the whole enchilada"
      shell:
        kubectl get pods -l {{item.value.label}} -n {{item.value.namespace}}
        -o jsonpath='{.items[0].metadata.name}' |
        xargs -I= kubectl port-forward = -n {{item.value.namespace}}
        {{item.value.local_port}}:{{item.value.remote_port}}
      async: "{{one_month}}"
      poll: 0
      with_dict: "{{services}}"
      when: false and item.value.enabled
      tags:
        - enchilada

