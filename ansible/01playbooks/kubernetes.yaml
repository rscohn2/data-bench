#
#   Copyright 2017 Intel Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#    
---
- hosts: master
  remote_user: root
  vars:
    pkgs: [kubernetes, etcd, flannel]
    svcs: [etcd, kube-apiserver, kube-controller-manager, kube-scheduler]
    master: "{{ansible_fqdn}}"
    etcd_port0: 2379
    etcd_port1: 2380
    k8s_port: 8080
    svc_key: /etc/kubernetes/service.key
    k8s_master: "http://{{master}}:{{k8s_port}}"
    etcd_master: "http://{{master}}:{{etcd_port0}}"
    allow_privileged: "true"
    pkg_check: present
    flannel_json: '{"Network":"172.16.0.0/16", "Subnetlen":24, "Backend":{"Type":"vxlan","VNI":1}}'
    
  tasks:
    - name: Check Kubernetes Master Packages Are Installed
      yum:
        name="{{item}}"
        state="{{pkg_check}}"
      with_items: "{{pkgs}}"
      tags: install
      
    - name: "Generate SSL {{svc_key}}"
      command: openssl genrsa -out "{{svc_key}}" 2048
      tags: generate

    - name: Update /etc/kubernetes/controller-manager
      lineinfile:
        path: /etc/kubernetes/controller-manager
        regexp: "^KUBE_CONTROLLER_MANAGER_ARGS"
        line: 'KUBE_CONTROLLER_MANAGER_ARGS="--service-account-private-key-file={{svc_key}} --root-ca-file=/var/run/kubernetes/apiserver.crt"'
      tags: configuration
      
    - name: Update KUBE_API_ADDRESS in /etc/kubernetes/apiserver
      lineinfile:
        path: /etc/kubernetes/apiserver
        regexp: "^KUBE_API_ADDRESS"
        line: 'KUBE_API_ADDRESS="--insecure-bind-address=0.0.0.0"'
      tags: configuration        

    - name: Update KUBELET_PORT in /etc/kubernetes/apiserver
      lineinfile:
        path: /etc/kubernetes/apiserver
        regexp: "^KUBELET_PORT"
        line: 'KUBELET_PORT="--insecure-port=8080"'
      tags: configuration

    - name: Update KUBE_ETCD_SERVERS in /etc/kubernetes/apiserver
      lineinfile:
        path: /etc/kubernetes/apiserver
        regexp: "^KUBE_ETCD_SERVERS"
        line: 'KUBE_ETCD_SERVERS="--etcd-servers={{etcd_master}}"'
      tags: configuration

    - name: Update KUBE_API_ARGS in /etc/kubernetes/apiserver
      lineinfile:
        path: /etc/kubernetes/apiserver
        regexp: "^KUBE_API_ARGS"
        line: 'KUBE_API_ARGS="--service-account-key-file={{svc_key}}"'
      tags: configuration


    - name: Update KUBE_ADMISSION_CONTROL in /etc/kubernetes/apiserver
      lineinfile:
        path: /etc/kubernetes/apiserver
        regexp: '^KUBE_ADMISSION_CONTROL'
        line: 'KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,LimitRanger,ResourceQuota"'
      tags: configuration

      
    - name: Update ETCD_LISTEN_PEER_URLS in /etc/etcd/etcd.conf
      lineinfile:
        path: /etc/etcd/etcd.conf
        insertafter: "^#ETCD_LISTEN_PEER_URLS"
        state: present
        line: 'ETCD_LISTEN_PEER_URLS="http://localhost:2380"'
      tags: configuration
        
    - name: Update ETCD_LISTEN_CLIENT_URLS in /etc/etcd/etcd.conf
      lineinfile:
        path: /etc/etcd/etcd.conf
        regexp: "^ETCD_LISTEN_CLIENT_URLS"
        line: 'ETCD_LISTEN_CLIENT_URLS="{{etcd_master}},http://localhost:{{etcd_port0}}"'
      tags: configuration

    - name: Update ETCD_ADVERTISE_CLIENT_URLS in /etc/etcd/etcd.conf
      lineinfile:
        path: /etc/etcd/etcd.conf
        regexp: "^ETCD_ADVERTISE_CLIENT_URLS"
        line: 'ETCD_ADVERTISE_CLIENT_URLS={{etcd_master}},http://localhost:{{etcd_port0}}"'
      tags: configuration
      
    - name: Update KUBE_MASTER in /etc/kubernetes/config
      lineinfile:
        path: /etc/kubernetes/config
        regexp: "^KUBE_MASTER"
        line: 'KUBE_MASTER="--master={{k8s_master}}"'
      tags: configuration

    - name: "Update KUBE_ALLOW_PRIV in /etc/kubernetes/config {{allow_privileged}}"
      lineinfile:
        path: /etc/kubernetes/config
        regexp: "^KUBE_ALLOW_PRIV"
        line: 'KUBE_ALLOW_PRIV="--allow-privileged={{allow_privileged}}"'
      tags: configuration
      
    - name: Start Kubernetes Master Services
      service:
        name: "{{item}}"
        state: started
      with_items: "{{svcs}}"
      tags: start

    - name: Enable Kubernetes Master Services on Reboot
      service:
        name: "{{item}}"
        enabled: yes
      with_items: "{{svcs}}"
      tags: enable

    - name: Update FLANNEL_ETCD_ENDPOINTS in /etc/sysconfig/flanneld
      lineinfile:
        path: /etc/sysconfig/flanneld
        regexp: "^FLANNEL_ETCD_ENDPOINTS"
        state: present
        line: 'FLANNEL_ETCD_ENDPOINTS="{{etcd_master}}"'
      tags: flannel_conf

    - name: Configure Flannel Container Network
      shell: etcdctl set atomic.io/network/config "{{flannel_json}}"
      tags: flannel_conf
  
    - name: Start flanneld Service
      service: name=flanneld state=started
      tags: flannel_conf, start
      
    - name: Enable flanneld On Reboot
      service: name=flanneld enabled=yes
      tags: flannel_conf, enable

- hosts: minions
  vars:
    master: "gojira.an.intel.com"
    k8s_port: 8080
    etcd_port: 2379
    k8s_master: "http://{{master}}:{{k8s_port}}"
    etcd_master: "http://{{master}}:{{etcd_port}}"
    pkgs: [ 'kubernetes', 'flannel', 'docker' ]
    svcs: [ 'flanneld', 'kube-proxy', 'kubelet', 'docker' ]
    cluster_dns: 10.254.0.10
    cluster_domain: kubernetes.local
  remote_user: root
  tasks:
    - name: Update Kubernetes Minion Packages
      yum:
        name: "{{item}}"
        state: latest
      with_items: "{{pkgs}}"
      tags: install
      
    - name: Update KUBE_MASTER in /etc/kubernetes/config
      lineinfile:
        path: /etc/kubernetes/config
        regexp: '^KUBE_MASTER'
        line: 'KUBE_MASTER="--master={{k8s_master}}"'
      tags: configuration
        
    - name: Update KUBELET_ADDRESS in /etc/kubernetes/kubelet
      lineinfile:
        path: /etc/kubernetes/kubelet
        regexp: '^KUBELET_ADDRESS'
        line: 'KUBELET_ADDRESS="--address=0.0.0.0"'
      tags: configuration

    - name: Update KUBELET_ARGS in /etc/kubernetes/kubelet
      lineinfile:
        path: /etc/kubernetes/kubelet
        regexp: '^KUBELET_ARG'
        line: 'KUBELET_ARG="--cluster-dns={{cluster_dns}} --cluster-domain={{cluster_domain}}"'
      tags: dns
        
    - name: Update KUBELET_HOSTNAME in /etc/kubernetes/kubelet to hostname
      lineinfile:
        path: /etc/kubernetes/kubelet
        regexp: '^KUBELET_HOSTNAME'
        line: 'KUBELET_HOSTNAME="--hostname_override={{ansible_hostname}}"'
      tags: configuration        
        
    - name: Update KUBELET_API_SERVER in /etc/kubernetes/kubelet
      lineinfile:
        path: /etc/kubernetes/kubelet
        regexp: '^KUBELET_API_SERVER'
        line: 'KUBELET_API_SERVER="--api_servers={{k8s_master}}"'
      tags: configuration
      
    - name: Comment out KUBELET_POD_INFRA_CONTAINER in /etc/kubernetes/kubelet
      replace:
        path: /etc/kubernetes/kubelet
        regexp: '^(KUBELET_POD_INFRA_CONTAINER)'
        replace: '#\1'
      tags: configuration
      
    - name: Update FLANNEL_ETCD_ENDPOINTS in /etc/sysconfig/flanneld
      lineinfile:
        path: /etc/sysconfig/flanneld
        regexp: '^FLANNEL_ETCD_ENDPOINTS'
        line: 'FLANNEL_ETCD_ENDPOINTS="{{etcd_master}}"'
      tags: configuration
      
    - name: Reload Service Settings
      command: systemctl daemon-reload
      tags: reload
      
    - name: Stop docker0 Interface
      command: nmcli c down docker0
      ignore_errors: True
      
    - name: Start Kubernetes Minion Services
      service:
        name: "{{item}}"
        state: started
      with_items: "{{svcs}}"
      tags: start
      
    - name: Enabling Kubernetes Minion Services
      service:
        name: "{{item}}"
        enabled: yes
      with_items: "{{svcs}}"
      tags: enable

    
